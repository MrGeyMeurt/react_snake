{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manut\\\\Documents\\\\my-app\\\\src\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport Snake from \"../Snake/Snake\";\nimport gsap from \"gsap\";\nimport s from \"./Board.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [snakeData, setSnakeData] = useState([[0, 0], [0, 10]]);\n  const timer = useRef(0);\n  const moveSnake = () => {};\n  const onKeyDown = e => {\n    console.log(e);\n    switch (e.keyCode) {\n      case 38:\n        console.log(\"going up\");\n        direction.current = \"UP\";\n        //Going up\n        break;\n      case 40:\n        direction.current = \"UP\";\n        //Going down\n        break;\n      case 37:\n        direction.current = \"UP\";\n        //Going left\n        break;\n      case 39:\n        direction.current = \"UP\";\n        //Going right\n        break;\n      default:\n        break;\n    }\n  };\n  const gameLoop = (time, deltaTime, frame) => {\n    //console.log(time, deltaTime, frame);\n    timer.current += deltaTime;\n    if (timer.current > 500) {\n      console.log(\"move snake\");\n      timer.current = 0;\n      moveSnake();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    gsap.ticker.add(gameLoop);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.board,\n    children: /*#__PURE__*/_jsxDEV(Snake, {\n      data: snakeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"p/byo5vBPjq0uWTkEYZHpjnVyfE=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useRef","useState","Snake","gsap","s","jsxDEV","_jsxDEV","Board","_s","snakeData","setSnakeData","timer","moveSnake","onKeyDown","e","console","log","keyCode","direction","current","gameLoop","time","deltaTime","frame","window","addEventListener","ticker","add","className","board","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/manut/Documents/my-app/src/components/Board/Board.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Snake from \"../Snake/Snake\";\r\nimport gsap from \"gsap\";\r\nimport s from \"./Board.module.scss\";\r\n\r\nconst Board = () => {\r\n    const [snakeData, setSnakeData] = useState([\r\n        [0, 0],\r\n        [0, 10],\r\n    ]);\r\n    \r\n    const timer = useRef(0);\r\n    \r\n    const moveSnake = () => {\r\n        \r\n    };\r\n    \r\n    const onKeyDown = (e) => {\r\n        console.log(e);\r\n        \r\n        switch (e.keyCode) {\r\n            case 38:\r\n            console.log(\"going up\");\r\n            direction.current = \"UP\";\r\n            //Going up\r\n            break;\r\n            case 40:\r\n            direction.current = \"UP\";\r\n            //Going down\r\n            break;\r\n            case 37:\r\n            direction.current = \"UP\";\r\n            //Going left\r\n            break;\r\n            case 39:\r\n            direction.current = \"UP\";\r\n            //Going right\r\n            break;\r\n            \r\n            default:\r\n            break;\r\n        }\r\n    };\r\n    \r\n    const gameLoop = (time, deltaTime, frame) => {\r\n        //console.log(time, deltaTime, frame);\r\n        timer.current += deltaTime\r\n        \r\n        if (timer.current > 500) {\r\n            console.log(\"move snake\");\r\n            timer.current = 0;\r\n            moveSnake();\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('keydown',onKeyDown);\r\n        gsap.ticker.add(gameLoop);\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={s.board}>\r\n        <Snake data={snakeData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,CAAC,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CACvC,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,EAAE,CAAC,CACV,CAAC;EAEF,MAAMU,KAAK,GAAGX,MAAM,CAAC,CAAC,CAAC;EAEvB,MAAMY,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;EAED,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACrBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAEd,QAAQA,CAAC,CAACG,OAAO;MACb,KAAK,EAAE;QACPF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvBE,SAAS,CAACC,OAAO,GAAG,IAAI;QACxB;QACA;MACA,KAAK,EAAE;QACPD,SAAS,CAACC,OAAO,GAAG,IAAI;QACxB;QACA;MACA,KAAK,EAAE;QACPD,SAAS,CAACC,OAAO,GAAG,IAAI;QACxB;QACA;MACA,KAAK,EAAE;QACPD,SAAS,CAACC,OAAO,GAAG,IAAI;QACxB;QACA;MAEA;QACA;IACJ;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,KAAK,KAAK;IACzC;IACAZ,KAAK,CAACQ,OAAO,IAAIG,SAAS;IAE1B,IAAIX,KAAK,CAACQ,OAAO,GAAG,GAAG,EAAE;MACrBJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBL,KAAK,CAACQ,OAAO,GAAG,CAAC;MACjBP,SAAS,CAAC,CAAC;IACf;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZyB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAACZ,SAAS,CAAC;IAC5CV,IAAI,CAACuB,MAAM,CAACC,GAAG,CAACP,QAAQ,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAKsB,SAAS,EAAExB,CAAC,CAACyB,KAAM;IAAAC,QAAA,eACxBxB,OAAA,CAACJ,KAAK;MAAC6B,IAAI,EAAEtB;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA5DID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}