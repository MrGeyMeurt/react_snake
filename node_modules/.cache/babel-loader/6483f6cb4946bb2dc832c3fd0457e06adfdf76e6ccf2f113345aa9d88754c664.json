{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manut\\\\Documents\\\\my-app\\\\src\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport Snake from \"../Snake/Snake\";\nimport gsap from \"gsap\";\nimport s from \"./Board.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [snakeData, setSnakeData] = useState([[0, 0], [10, 0]]);\n  const timer = useRef(0);\n  const direction = useRef('RIGHT');\n  const canChangeDirection = useRef(true);\n  const IsOutOfBorder = () => {\n    let head = SnakeData[SnakeData.length - 1];\n  };\n  const moveSnake = () => {\n    let newSnakeData = [...snakeData];\n    let head = newSnakeData[newSnakeData.length - 1];\n    //console.log(head); //position de la tete avant changement\n\n    switch (direction.current) {\n      case 'UP':\n        console.log(\"UP\");\n        head = [head[0], head[1] - 10];\n        break;\n      case 'DOWN':\n        console.log(\"DOWN\");\n        head = [head[0], head[1] + 10];\n        break;\n      case 'LEFT':\n        console.log(\"LEFT\");\n        head = [head[0] - 10, head[1]];\n        break;\n      case 'RIGHT':\n        console.log(\"RIGHT\");\n        head = [head[0] + 10, head[1]];\n        break;\n      default:\n        break;\n    }\n    newSnakeData.push(head);\n    newSnakeData.shift();\n    setSnakeData(newSnakeData);\n\n    //console.log(head); //position de la tete après changement\n  };\n  const onKeyDown = e => {\n    //console.log(e);\n    if (canChangeDirection.current === false) return;\n    canChangeDirection.current = false;\n    switch (e.keyCode) {\n      case 90:\n        //console.log(\"going up\");\n        if (direction.current !== \"DOWN\") {\n          direction.current = \"UP\";\n        }\n        //Going up\n        break;\n      case 83:\n        if (direction.current !== \"UP\") {\n          direction.current = \"DOWN\";\n        }\n        //Going down\n        break;\n      case 81:\n        if (direction.current !== \"RIGHT\") {\n          direction.current = \"LEFT\";\n        }\n        //Going left\n        break;\n      case 68:\n        if (direction.current !== \"LEFT\") {\n          direction.current = \"RIGHT\";\n        }\n        //Going right\n        break;\n      case 38:\n        if (direction.current !== \"DOWN\") {\n          direction.current = \"UP\";\n        }\n        //Going up\n        break;\n      case 40:\n        if (direction.current !== \"UP\") {\n          direction.current = \"DOWN\";\n        }\n        //Going down\n        break;\n      case 37:\n        if (direction.current !== \"RIGHT\") {\n          direction.current = \"LEFT\";\n        }\n        //Going left\n        break;\n      case 39:\n        if (direction.current !== \"LEFT\") {\n          direction.current = \"RIGHT\";\n        }\n        //Going right\n        break;\n      default:\n        break;\n    }\n  };\n  const gameLoop = (time, deltaTime, frame) => {\n    //console.log(time, deltaTime, frame);\n    timer.current += deltaTime;\n    if (timer.current > 500) {\n      //console.log(\"move snake\");\n      timer.current = 0;\n      moveSnake();\n      canChangeDirection.current = true;\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    gsap.ticker.add(gameLoop);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      gsap.ticker.remove(gameLoop);\n    };\n  }, [snakeData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.board,\n    children: /*#__PURE__*/_jsxDEV(Snake, {\n      data: snakeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"UUypOSky7T8s9pYOsBgr9bQLB2E=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useRef","useState","Snake","gsap","s","jsxDEV","_jsxDEV","Board","_s","snakeData","setSnakeData","timer","direction","canChangeDirection","IsOutOfBorder","head","SnakeData","length","moveSnake","newSnakeData","current","console","log","push","shift","onKeyDown","e","keyCode","gameLoop","time","deltaTime","frame","window","addEventListener","ticker","add","removeEventListener","remove","className","board","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/manut/Documents/my-app/src/components/Board/Board.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Snake from \"../Snake/Snake\";\r\nimport gsap from \"gsap\";\r\nimport s from \"./Board.module.scss\";\r\n\r\nconst Board = () => {\r\n    const [snakeData, setSnakeData] = useState([\r\n        [0, 0],\r\n        [10, 0],\r\n    ]);\r\n    \r\n    const timer = useRef(0);\r\n    const direction = useRef('RIGHT');\r\n    const canChangeDirection = useRef(true);\r\n\r\n    const IsOutOfBorder = () => {\r\n        let head = SnakeData[SnakeData.length - 1];\r\n    }\r\n    \r\n    const moveSnake = () => {\r\n        let newSnakeData = [...snakeData];\r\n        let head = newSnakeData[newSnakeData.length - 1];\r\n        //console.log(head); //position de la tete avant changement\r\n        \r\n        switch (direction.current) {\r\n            case 'UP':\r\n            console.log(\"UP\");\r\n            head = [head[0], head[1] - 10];\r\n            break;\r\n            case 'DOWN':\r\n            console.log(\"DOWN\");\r\n            head = [head[0], head[1] + 10];\r\n            break;\r\n            case 'LEFT':\r\n            console.log(\"LEFT\");\r\n            head = [head[0] - 10, head[1]];\r\n            break;\r\n            case 'RIGHT':\r\n            console.log(\"RIGHT\");\r\n            head = [head[0] + 10, head[1]];\r\n            break;\r\n            \r\n            default:\r\n            break;\r\n        }\r\n        \r\n        newSnakeData.push(head);\r\n        newSnakeData.shift();\r\n        \r\n        setSnakeData(newSnakeData);\r\n        \r\n        //console.log(head); //position de la tete après changement\r\n    };\r\n    \r\n    const onKeyDown = (e) => {\r\n        //console.log(e);\r\n        if (canChangeDirection.current === false) return;\r\n        canChangeDirection.current = false;\r\n        \r\n        switch (e.keyCode) {\r\n            case 90:\r\n            //console.log(\"going up\");\r\n            if(direction.current !== \"DOWN\") {\r\n                direction.current = \"UP\";\r\n            }\r\n            //Going up\r\n            break;\r\n            case 83:\r\n            if(direction.current !== \"UP\") {\r\n                direction.current = \"DOWN\";\r\n            }\r\n            //Going down\r\n            break;\r\n            case 81:\r\n            if(direction.current !== \"RIGHT\") {\r\n                direction.current = \"LEFT\";\r\n            }\r\n            //Going left\r\n            break;\r\n            case 68:\r\n            if(direction.current !== \"LEFT\") {\r\n                direction.current = \"RIGHT\";\r\n            }\r\n            //Going right\r\n            break;\r\n            \r\n            case 38:\r\n            if(direction.current !== \"DOWN\") {\r\n                direction.current = \"UP\";\r\n            }\r\n            //Going up\r\n            break;\r\n            case 40:\r\n            if(direction.current !== \"UP\") {\r\n                direction.current = \"DOWN\";\r\n            }\r\n            //Going down\r\n            break;\r\n            case 37:\r\n            if(direction.current !== \"RIGHT\") {\r\n                direction.current = \"LEFT\";\r\n            }\r\n            //Going left\r\n            break;\r\n            case 39:\r\n            if(direction.current !== \"LEFT\") {\r\n                direction.current = \"RIGHT\";\r\n            }\r\n            //Going right\r\n            break;\r\n            \r\n            default:\r\n            break;\r\n        }\r\n    };\r\n    \r\n    const gameLoop = (time, deltaTime, frame) => {\r\n        //console.log(time, deltaTime, frame);\r\n        timer.current += deltaTime;\r\n        \r\n        if (timer.current > 500) {\r\n            //console.log(\"move snake\");\r\n            timer.current = 0;\r\n            moveSnake();\r\n            canChangeDirection.current = true\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\",onKeyDown);\r\n        gsap.ticker.add(gameLoop);\r\n        \r\n        return () => {\r\n            window.removeEventListener(\"keydown\", onKeyDown);\r\n            gsap.ticker.remove(gameLoop);\r\n        }\r\n    }, [snakeData]);\r\n    \r\n    return (\r\n        <div className={s.board}>\r\n        <Snake data={snakeData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}